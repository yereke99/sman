#!/usr/bin/env python
# -*- coding: utf-8 -*-
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from load import bot, dp
from aiogram import types
from FormaAdmin import *
from keyboard import*
from database import*
from config import*
from Forma import*
import asyncio
from traits import*
import time
from FormaAdmin import*
from ChatForma import*




generator = Generator()
btn = Button()
db = Database()

@dp.message_handler(commands=['start', 'go'])
async def start_handler(message: types.Message):
    print(message.from_user.id)
      
    #from datetime import datetime
    #fileId = "AgACAgIAAxkBAANcZwwL-emYUtwEKC8tOLtMa93tOnMAAqfoMRtMEGBILbrCi2y-dy4BAAMCAAN5AAM2BA"

    #user_id = message.from_user.id
    #user_name = f"@{message.from_user.username}"
    #time_now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    #db.JustInsert(user_id, user_name, time_now)  
    
    await bot.send_message(
        message.from_user.id,
        text="""–î–æ–±—Ä—ã–π –¥–µ–Ω—å!""",
        parse_mode="Markdown",
        reply_markup=btn.menu()
    )

@dp.callback_query_handler(lambda call: call.data.startswith("contact_user:"))
async def callback_inline(call: types.CallbackQuery):
    print("INLINE")
    if call.data.startswith("contact_user:"):
        print("INLINE –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ä–∞–±–æ—Ç–∞–ª")

        # –†–∞—Å–ø–∞—Ä—Å–∏–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback –¥–∞–Ω–Ω—ã—Ö
        user_id = call.data.split(":")[1]
        
        # –û—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ inline-–∫–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        await bot.send_message(call.message.chat.id, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
        await call.answer()
    


# üîç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
@dp.message_handler(commands=['chat'])
@dp.message_handler(Text(equals="üîç –ß–∞—Ç —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"), content_types=['text'])
async def handler(message: types.Message):
    
    await Chat.waiting_for_message.set()

    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.", reply_markup=types.ReplyKeyboardRemove())



"""
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è Inline-–∫–Ω–æ–ø–∫–∏
@dp.callback_query_handler()
async def process_contact_user_callback(callback_query: types.CallbackQuery):
    print("here")
    if callback_query.data.startswith("contact_user:"):
        user_id = int(callback_query.data.split(':')[1])
        print(user_id)
        admin_id = callback_query.from_user.id
        
        User_admin_mapping[admin_id] = user_id
        
        await bot.send_message(callback_query.message.chat.id, f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
        await bot.answer_callback_query(callback_query.id)
"""




