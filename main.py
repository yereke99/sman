#!/usr/bin/env python
# -*- coding: utf-8 -*-
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.dispatcher.filters import Text
from load import bot, dp
from aiogram import types
from FormaAdmin import *
from keyboard import*
from database import*
from config import*
#from Forma import*
import asyncio
from traits import*
import time
from FormaAdmin import*
from ChatForma import*
from data import SHOES_DATA
from Formas import*
import re
from mongo import*


generator = Generator()
btn = Button()
db = MongoDB()


"""
@dp.message_handler(commands=['start', 'go'])
async def start_handler(message: types.Message):
    print(message.from_user.id)
      
    from datetime import datetime
    #fileId = "AgACAgIAAxkBAANcZwwL-emYUtwEKC8tOLtMa93tOnMAAqfoMRtMEGBILbrCi2y-dy4BAAMCAAN5AAM2BA"

    user_id = message.from_user.id
    user_name = f"@{message.from_user.username}"
    time_now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    
    db.JustInsert(user_id, user_name, time_now)  
    
    await bot.send_message(
        message.from_user.id,
        text=f"–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, {message.from_user.first_name}! üëã\n"
            SMAN - –ø—Ä–µ–º–∏—É–º “ö–∞–∑–∞“õ –±—Ä–µ–Ω–¥—ñ. 

4 –º–µ–º–ª–µ–∫–µ—Ç—Ç–µ —Ç—ñ–≥—ñ–ª–µ–¥—ñ üáµüáπüá®üá≥üáπüá∑üáÆüáπ

200 –µ—Ä–ª–µ—Ä –º–µ–Ω ”ô–π–µ–ª–¥–µ—Ä–≥–µ ”ô–ª–µ–º–Ω—ñ“£ “õ–∞–π–º–∞“õ—Ç–∞—Ä—ã–Ω –∞–ª—ã–ø –∫–µ–ª–µ–º—ñ–∑

No pig leather,
        parse_mode="Markdown",
        reply_markup=btn.menu()
    )

"""

@dp.message_handler(commands=['start'])
async def start_command_handler(message: types.Message, state: FSMContext):
    args = message.get_args()

    if args.startswith("buy_"):
        product_code = args.replace("buy_", "")

        # –ò—â–µ–º —Ç–æ–≤–∞—Ä –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–¥—É
        product = db.getByCodeAllData(product_code)
        
        if product:
            category = product.get("category", "–¢–∞—É–∞—Ä")
            price = product.get("discounted_price", "–ë–µ–ª–≥—ñ—Å—ñ–∑")
            sizes = product.get("sizes", [])
            initial_price = product.get("initial_price", price)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
            await state.update_data(type=product_code)
            await Forma.s3.set()  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é (Forma.s3)

            # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–∞–∑–º–µ—Ä–æ–≤
            await message.answer(
                f"–°—ñ–∑ {category} - {price} KZT —Ç–∞—É–∞—Ä—ã–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑.\n"
                f"‚ùå –ê–ª“ì–∞—à“õ—ã –±–∞“ì–∞—Å—ã: {initial_price} —Ç–≥\n"
                f"‚úÖ –ñ–∞“£–∞ –±–∞“ì–∞: {price} —Ç–≥\n"
                f"üìè “ö–æ–ª –∂–µ—Ç—ñ–º–¥—ñ ”©–ª—à–µ–º–¥–µ—Ä: {', '.join(map(str, sizes))}\n"
                f"üîñ –ö–æ–¥: {product_code}\n\n"
                "”®–ª—à–µ–º–¥—ñ —Ç–∞“£–¥–∞—É “Ø—à—ñ–Ω —Ç”©–º–µ–Ω–¥–µ–≥—ñ –±–∞—Ç—ã—Ä–º–∞–Ω—ã –±–∞—Å—ã“£—ã–∑.",
                reply_markup=btn.size_keyboard(sizes)  # –ö–Ω–æ–ø–∫–∏ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏
            )
        else:
            # –ï—Å–ª–∏ —Ç–æ–≤–∞—Ä —Å –¥–∞–Ω–Ω—ã–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω
            await message.answer("–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, –±“±–ª –∫–æ–¥ –±–æ–π—ã–Ω—à–∞ —Ç–∞—É–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    else:
        await message.answer("–ë–æ—Ç“õ–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –°–∞—Ç—ã–ø –∞–ª—É “Ø—à—ñ–Ω –∫–æ–¥—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑. @sman_online")

# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
@dp.message_handler(commands=["m1"])
async def start_handler(message: types.Message):
    sex = "–ï—Ä–ª–µ—Ä"
    price = "37 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")


# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
@dp.message_handler(commands=["m2"])
async def start_handler(message: types.Message):
    sex = "–ï—Ä–ª–µ—Ä"
    price = "27 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")

@dp.message_handler(commands=["m3"])
async def start_handler(message: types.Message):
    sex = "–ï—Ä–ª–µ—Ä"
    price = "57 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")

@dp.message_handler(commands=["m4"])
async def start_handler(message: types.Message):
    sex = "–ï—Ä–ª–µ—Ä"
    price = "17 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")



# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
@dp.message_handler(commands=["w1"])
async def start_handler(message: types.Message):
    sex = "”ò–π–µ–ª–¥–µ—Ä"
    price = "57 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")


# –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
@dp.message_handler(commands=["w2"])
async def start_handler(message: types.Message):
    sex = "”ò–π–µ–ª–¥–µ—Ä"
    price = "37 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")

@dp.message_handler(commands=["w3"])
async def start_handler(message: types.Message):
    sex = "”ò–π–µ–ª–¥–µ—Ä"
    price = "17 900"
    await send_product_to_channel(sex, price)
    await message.answer("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")



@dp.message_handler(commands=["code"])
async def code_handler(message: types.Message):
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞
    channel_id = "@sman_online"  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–∞–Ω–∞–ª

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    args = message.text.split(" ", 1)  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏ –∞—Ä–≥—É–º–µ–Ω—Ç
    if len(args) < 2:
        await message.reply("–ö–æ–¥ —Ç–æ–≤–∞—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç: /code <–∫–æ–¥ —Ç–æ–≤–∞—Ä–∞>")
        return

    code = args[1].strip()
    product = db.getByCodeAllData(code)

    if product:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–µ
        category = product.get("category", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        price = product.get("discounted_price", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
        sizes = ", ".join(map(str, product.get("sizes", [])))
        file_id = product.get("file_id", None)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        product_name = f"{category} - {price} KZT"
        text = (
            f"üõçÔ∏è *{product_name}*\n\n"
            f"üìè ”®–ª—à–µ–º–¥–µ—Ä—ñ: {sizes}\n"
            f"üîñ –ö–æ–¥: {code}\n\n"
            f"üí∏ *–ë–∞“ì–∞—Å—ã:* {price} KZT\n\n"
            "–¢–∞—É–∞—Ä–¥—ã —Å–∞—Ç—ã–ø –∞–ª—É “Ø—à—ñ–Ω –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:"
        )
        bot_username = "smanonline_bot"
        # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É
        bot_url = f"https://t.me/{bot_username}?start=buy_{code.replace('/', '_')}"
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–°–∞—Ç—ã–ø –∞–ª—É üõí", url=bot_url))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª
        if file_id:
            await bot.send_photo(
                chat_id=channel_id,
                photo=file_id,
                caption=text,
                parse_mode="Markdown",
                reply_markup=keyboard
            )
        else:
            await bot.send_message(
                chat_id=channel_id,
                text=text,
                parse_mode="Markdown",
                reply_markup=keyboard
            )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        await message.reply("–¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª.")
    else:
        await message.reply(f"–¢–æ–≤–∞—Ä —Å –∫–æ–¥–æ–º {code} –Ω–µ –Ω–∞–π–¥–µ–Ω.")


from aiogram import types

async def send_product_to_channel(sex: str, price: str):
    # –ö–∞–Ω–∞–ª –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã
    channel_id = "@sman_online"

    # –ë–æ—Ç —Å—ñ–ª—Ç–µ–º–µ—Å—ñ–Ω—ñ“£ “Ø–ª–≥—ñ—Å—ñ
    bot_username = "smanonline_bot"

    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã –∏–∑ MongoDB –ø–æ —Ñ–∏–ª—å—Ç—Ä—É
    # –û—Ç–±–∏—Ä–∞–µ–º —Ç–æ–ª—å–∫–æ "–ï—Ä–ª–µ—Ä" —Å —Ü–µ–Ω–æ–π 37 900
    products = db.getBySexPrice(sex, price)

    for product in products:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
        category = product.get("category", "–ï—Ä–ª–µ—Ä")
        price = product.get("discounted_price", "37 900")
        sizes = ", ".join(map(str, product.get("sizes", [])))
        code = product.get("code", "")
        file_id = product.get("file_id")  # –ò–∑–≤–ª–µ–∫–∞–µ–º file_id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        product_name = f"{category} - {price} KZT"  # –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ —Ü–µ–Ω–∞
        text = (
            f"üõçÔ∏è *{product_name}*\n\n"
            f"üìè ”®–ª—à–µ–º–¥–µ—Ä—ñ: {sizes}\n"
            f"üîñ –ö–æ–¥: {code}\n\n"
            f"üí∏ *–ë–∞“ì–∞—Å—ã:* {price} KZT\n\n"
            "–¢–∞—É–∞—Ä–¥—ã —Å–∞—Ç—ã–ø –∞–ª—É “Ø—à—ñ–Ω —Ç”©–º–µ–Ω–¥–µ–≥—ñ –±–∞—Ç—ã—Ä–º–∞–Ω—ã –±–∞—Å—ã“£—ã–∑:"
        )
        
        # –°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥—ã /buy
        bot_url = f"https://t.me/{bot_username}?start=buy_{code.replace('/', '_')}"

        # –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("–°–∞—Ç—ã–ø –∞–ª—É üõí", url=bot_url))

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª —Å —Ñ–æ—Ç–æ –∏–ª–∏ –±–µ–∑
        if file_id:
            # –ï—Å–ª–∏ –µ—Å—Ç—å file_id, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
            await bot.send_photo(
                chat_id=channel_id,
                photo=file_id,
                caption=text,
                parse_mode="Markdown",
                reply_markup=keyboard
            )
        else:
            # –ï—Å–ª–∏ file_id –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await bot.send_message(
                chat_id=channel_id,
                text=text,
                parse_mode="Markdown",
                reply_markup=keyboard
            )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /manager
@dp.message_handler(commands=["manager"])
async def send_managers_info(message: types.Message):
    # –¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    managers_text = (
        "@sman_manager_womens - üë§ ”ò–π–µ–ª–¥–µ—Ä —Ç–æ–ø—Ç–∞–º–∞—Å—ã–Ω—ã“£ —Å–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—ñ\n\n"
        "@sman_manager_mens - üë§ –ï—Ä–ª–µ—Ä —Ç–æ–ø—Ç–∞–º–∞—Å—ã–Ω—ã“£ —Å–∞—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä—ñ"
    )
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
    channel_id = "@sman_online"
    await bot.send_message(chat_id=channel_id, text=managers_text, parse_mode="Markdown")
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
    await message.reply("–ú–µ–Ω–µ–¥–∂–µ—Ä–ª–µ—Ä–¥—ñ“£ –∞“õ–ø–∞—Ä–∞—Ç—ã —Ç–æ–ø“õ–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ!")



# üîç –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
@dp.message_handler(commands=['chats'])
@dp.message_handler(Text(equals="üó£ –ú–µ–Ω–µ–¥–∂–µ—Ä–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å"), content_types=['text'])
async def handler(message: types.Message):
    
    await Chat.waiting_for_message.set()

    await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.", reply_markup=types.ReplyKeyboardRemove())


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def get_file_id_and_upload_data(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º file_id
    file_id = message.photo[-1].file_id

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç (–ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ)
    if message.caption:
        text = message.caption.strip()
    else:
        await message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é.")
        return

    # –†–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    lines = text.strip().split('\n')
    if len(lines) < 3:
        await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —Ü–µ–Ω—É –∏ –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞.")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    category = lines[0].strip()
    initial_price = lines[1].strip()
    code_sizes_line = lines[2].strip()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–Ω
    if initial_price.replace(" ", "") == "57900":
        discounted_price = initial_price
        initial_price = "67 900"
    else:
        discounted_price = initial_price
        initial_price = str(int(initial_price.replace(" ", "")) + 10000)

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–∞ –∏ —Ä–∞–∑–º–µ—Ä–æ–≤
    pattern = r'^(?P<code>\w+)/(?P<sizes>[\d,\s]+)$'
    match = re.match(pattern, code_sizes_line)

    if match:
        code = match.group('code')
        sizes_str = match.group('sizes')
        sizes = [int(size.strip()) for size in sizes_str.split(',') if size.strip().isdigit()]

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        item_data = {
            'file_id': file_id,
            'category': category,
            'initial_price': initial_price,
            'discounted_price': discounted_price,
            'code': code,
            'sizes': sizes
        }

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ MongoDB
        result = db.upsert_item(code, item_data)

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
        sizes_text = ", ".join(map(str, sizes))
        response_text = (
            f"{category} –∞—è“õ –∫–∏—ñ–º—ñ\n"
            f"üõçÔ∏èüßîüèª‚Äç‚ôÇÔ∏è{category} –∞—è“õ –∫–∏—ñ–º—ñ - SALE\n\n"
            f"‚ùå–ê–ª“ì–∞—à“õ—ã –±–∞“ì–∞—Å—ã: {initial_price} —Ç–≥\n"
            f"‚úÖ–ñ–∞“£–∞ –±–∞“ì–∞: {discounted_price} —Ç–≥\n\n"
            f"”®–ª—à–µ–º–¥–µ—Ä—ñ: {sizes_text}"
        )
        await message.reply(f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ {'–¥–æ–±–∞–≤–ª–µ–Ω—ã' if result != 'Updated' else '–æ–±–Ω–æ–≤–ª–µ–Ω—ã'}:\n\n{response_text}")
    else:
        await message.reply("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç '–ö–æ–¥/—Ä–∞–∑–º–µ—Ä—ã'.")

@dp.message_handler(commands=['get_all'])
async def send_all_items(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /get_all –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏."""
    items = db.get_all_items()
    if not items:
        await message.reply("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return

    for item in items:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø–∏—Å–∏
        file_id = item.get('file_id')
        category = item.get('category', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è')
        initial_price = item.get('initial_price', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ü–µ–Ω–∞')
        discounted_price = item.get('discounted_price', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ü–µ–Ω–∞')
        code = item.get('code', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ–¥')
        sizes = item.get('sizes', [])

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        sizes_text = ", ".join(map(str, sizes))
        caption = (
            f"{category} –∞—è“õ –∫–∏—ñ–º—ñ\n"
            f"üõçÔ∏èüßîüèª‚Äç‚ôÇÔ∏è{category} –∞—è“õ –∫–∏—ñ–º—ñ - SALE\n\n"
            f"‚ùå–ê–ª“ì–∞—à“õ—ã –±–∞“ì–∞—Å—ã: {initial_price} —Ç–≥\n"
            f"‚úÖ–ñ–∞“£–∞ –±–∞“ì–∞: {discounted_price} —Ç–≥\n\n"
            f"”®–ª—à–µ–º–¥–µ—Ä—ñ: {sizes_text}"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç
        try:
            await bot.send_photo(chat_id=message.chat.id, photo=file_id, caption=caption)
        except Exception as e:
            await message.reply(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –¥–ª—è {code}: {str(e)}")



@dp.message_handler(commands=['buy'])
async def buy_command_handler(message: types.Message, state: FSMContext):
    args = message.get_args()  # 'Mp16' —Å–∏—è“õ—Ç—ã –∫–æ–¥—Ç—ã –∞–ª—É

    if args:  # –ï–≥–µ—Ä –∫–æ–¥ –±–µ—Ä—ñ–ª–≥–µ–Ω –±–æ–ª—Å–∞
        product_code = args.strip()  # –ö–æ–¥—Ç—ã –∞–ª—ã–ø —Ç–∞—Å—Ç–∞–π–º—ã–∑

        # SHOES_DATA –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ–Ω–µ–Ω —Ç–∞—É–∞—Ä–¥—ã —Ç–∞–±—É
        for category, prices in SHOES_DATA.items():
            for price, products in prices.items():
                for product in products:
                    if product["code"] == product_code:
                        # Forma.s2 –∫“Ø–π—ñ–Ω–µ ”©—Ç—É –∂”ô–Ω–µ –∫“Ø–π –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ–Ω —Å–∞“õ—Ç–∞—É
                        await state.update_data(type=product_code)
                        await Forma.s2.set()

                        # –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ –∂–∞—É–∞–ø –±–µ—Ä—É
                        await message.answer(
                            f"–°—ñ–∑ {category} - {price} KZT —Ç–∞—É–∞—Ä—ã–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑.\n"
                            f"üìè ”®–ª—à–µ–º–¥–µ—Ä—ñ: {', '.join(map(str, product['sizes']))}\n"
                            f"üîñ –ö–æ–¥: {product_code}\n\n"
                            "–¢”©–º–µ–Ω–¥–µ–≥—ñ –±–∞—Ç—ã—Ä–º–∞–Ω—ã –±–∞—Å—ã–ø —Ç–∞“£–¥–∞—É—ã“£—ã–∑–¥—ã —Ä–∞—Å—Ç–∞“£—ã–∑.",
                            reply_markup=btn.cancel() if isinstance(btn.cancel(), InlineKeyboardMarkup) else InlineKeyboardMarkup()
                        )
                        return

        # –ï–≥–µ—Ä –∫–æ–¥ —Ç–∞–±—ã–ª–º–∞—Å–∞
        await message.answer("–ö–µ—à—ñ—Ä—ñ“£—ñ–∑, –±“±–ª –∫–æ–¥ –±–æ–π—ã–Ω—à–∞ —Ç–∞—É–∞—Ä —Ç–∞–±—ã–ª–º–∞–¥—ã.")
    else:
        await message.answer("–¢–∞—É–∞—Ä –∫–æ–¥—ã –¥“±—Ä—ã—Å –µ–º–µ—Å –Ω–µ–º–µ—Å–µ –∫”©—Ä—Å–µ—Ç—ñ–ª–º–µ–≥–µ–Ω.")

@dp.callback_query_handler()
async def process_callback(callback_query: types.CallbackQuery, state: FSMContext):
    data = callback_query.data
    message_id = callback_query.message.message_id
    chat_id = callback_query.message.chat.id

    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    if data == "buy_shoes_by_code":
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—É–≤–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await Forma.s1.set()
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–¢—ñ–∫–µ–ª–µ–π —ç—Ñ–∏—Ä–¥–µ –∫”©—Ä—Å–µ—Ç—ñ–ª–≥–µ–Ω –∫–æ–¥—Ç—ã ‚úèÔ∏è –µ–Ω–≥—ñ–∑“£—ñ–∑",
            reply_markup=btn.cancel() if isinstance(btn.cancel(), InlineKeyboardMarkup) else InlineKeyboardMarkup()
        )
           
    elif data == "buy_shoes":
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—É–≤–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ –∞—è“õ –∫–∏—ñ–º —Å–∞—Ç—ã–ø –∞–ª“ì—ã“£—ã–∑ –∫–µ–ª–µ–¥—ñ. –¢”©–º–µ–Ω–Ω–µ–Ω —Å–∞–Ω–∞—Ç—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=btn.category_selection_keyboard()
        )
    

    elif data == "contact_manager":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–ú–µ–Ω–µ–¥–∂–µ—Ä–º–µ–Ω –±–∞–π–ª–∞–Ω—ã—Å—É “Ø—à—ñ–Ω: /chat –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑"
        )

    elif data == "my_orders":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–ë“±–ª –∂–µ—Ä–¥–µ —Å—ñ–∑–¥—ñ“£ —Ç–∞–ø—Å—ã—Ä—ã—Å—Ç–∞—Ä—ã“£—ã–∑ –∫”©—Ä—Å–µ—Ç—ñ–ª–µ–¥—ñ."
        )

    elif data == "about_us":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="SMAN - –∂–æ“ì–∞—Ä—ã —Å–∞–ø–∞–ª—ã –∏—Ç–∞–ª—å—è–Ω–¥—ã“õ –∞—è“õ –∫–∏—ñ–º –¥“Ø–∫–µ–Ω—ñ. “ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!",
            reply_markup=btn.webInsta()
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—É–≤–∏
    elif data == "category_men":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ –µ—Ä–ª–µ—Ä –∞—è“õ –∫–∏—ñ–º—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑. –¢“Ø—Ä—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=btn.men_shoes_keyboard()
        )
    
    elif data == "category_women":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ ”ô–π–µ–ª–¥–µ—Ä –∞—è“õ –∫–∏—ñ–º—ñ–Ω —Ç–∞“£–¥–∞–¥—ã“£—ã–∑. –¢“Ø—Ä—ñ–Ω —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=btn.women_shoes_keyboard()
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif data == "back_to_menu":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–ë–∞—Å—Ç—ã –º”ô–∑—ñ—Ä–≥–µ –æ—Ä–∞–ª–¥—ã“£—ã–∑:",
            reply_markup=btn.menu()
        )

    elif data == "back_to_category":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°–∞–Ω–∞—Ç—Ç—ã “õ–∞–π—Ç–∞ —Ç–∞“£–¥–∞“£—ã–∑:",
            reply_markup=btn.category_selection_keyboard()
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –º—É–∂—Å–∫–æ–π –æ–±—É–≤–∏
    elif data == "men_sneakers":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: –ï—Ä–ª–µ—Ä –∫—Ä–æ—Å—Å–æ–≤–∫–∏–ª–∞—Ä—ã –∂”ô–Ω–µ –∫–µ–¥—ã–ª–∞—Ä. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "men_boots":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: –ï—Ä–ª–µ—Ä –±”ô—Ç–µ“£–∫–µ–ª–µ—Ä—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "men_boots_high":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: –ï—Ä–ª–µ—Ä –µ—Ç—ñ–≥—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "men_shoes":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: –ï—Ä–ª–µ—Ä —Ç—É—Ñ–ª–∏—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∂–µ–Ω—Å–∫–æ–π –æ–±—É–≤–∏
    elif data == "women_sneakers":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: ”ò–π–µ–ª–¥–µ—Ä –∫—Ä–æ—Å—Å–æ–≤–∫–∏–ª–∞—Ä—ã –∂”ô–Ω–µ –∫–µ–¥—ã–ª–∞—Ä. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "women_boots":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: ”ò–π–µ–ª–¥–µ—Ä –±”ô—Ç–µ“£–∫–µ–ª–µ—Ä—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "women_boots_high":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: ”ò–π–µ–ª–¥–µ—Ä –µ—Ç—ñ–≥—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
    elif data == "women_shoes":
        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text="–°—ñ–∑ —Ç–∞“£–¥–∞–¥—ã“£—ã–∑: ”ò–π–µ–ª–¥–µ—Ä —Ç—É—Ñ–ª–∏—ñ. –ñ–∞“õ—ã–Ω –∞—Ä–∞–¥–∞ —Ç–∞—É–∞—Ä–¥—ã Telegram –±–æ—Ç—Ç–∞ –æ–Ω–ª–∞–π–Ω —Ç“Ø—Ä–¥–µ —Ä”ô—Å—ñ–º–¥–µ–π –∞–ª–∞—Å—ã–∑."
        )
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤—è–∑–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    elif data.startswith("contact_user:"):
        user_id = int(data.split(':')[1])
        print(f"–°–≤—è–∑—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
        
        async with state.proxy() as state_data:
            state_data['user_id'] = user_id

        await bot.edit_message_text(
            chat_id=chat_id,
            message_id=message_id,
            text=f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:"
        )
        await Chat.sending_for_message.set()

    # –û—Ç–≤–µ—Ç –¥–ª—è callback_query
    await bot.answer_callback_query(callback_query.id)




